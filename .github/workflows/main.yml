name: CI/CD 

on:
  push:
    branches:
      - main
      - Develop
      - Deploy
      - feature/*
      - release/*

jobs:
  backend-test:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/deploy'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
        
    - name: List files
      run: |
        ls -la    

    - name: Install backend dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run backend tests
      run: |
        pytest

  frontend-test:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/deploy'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm install

    - name: Run frontend tests
      run: |
        cd frontend
        npm test

  test-deploy-branch:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/deploy'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: List files
      run: |
          ls -la
          
    - name: Install backend dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run backend tests
      run: |
        pytest

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm install

    - name: Run frontend tests
      run: |
        cd frontend
        npm test

  deploy-staging:
    needs: [backend-test, frontend-test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    # ... (set up Python, Node.js, and install dependencies as shown in previous steps)

    - name: Deploy backend to staging
      env:
        DO_API_KEY: ${{ secrets.DO_API_KEY }}
      run: |
        # Adapt this script to deploy your backend to the staging droplet on DigitalOcean
        # using the API # using the API key stored in the DO_API_KEY environment variable
        # and any necessary deployment scripts or commands.

    - name: Deploy frontend to staging
      env:
        DO_API_KEY: ${{ secrets.DO_API_KEY }}
      run: |
        # Adapt this script to deploy your frontend to the staging droplet on DigitalOcean
        # using the API key stored in the DO_API_KEY environment variable
        # and any necessary deployment scripts or commands.

  deploy-production:
    needs: [backend-test, frontend-test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    # ... (set up Python, Node.js, and install dependencies as shown in previous steps)

    - name: Deploy backend to production
      env:
        DO_API_KEY: ${{ secrets.DO_API_KEY }}
      run: |
        # Adapt this script to deploy your backend to the production droplet on DigitalOcean
        # using the API key stored in the DO_API_KEY environment variable
        # and any necessary deployment scripts or commands.

    - name: Deploy frontend to production
      env:
        DO_API_KEY: ${{ secrets.DO_API_KEY }}
      run: |
        # Adapt this script to deploy your frontend to the production droplet on DigitalOcean
        # using the API key stored in the DO_API_KEY environment variable
        # and any necessary deployment scripts or commands.
