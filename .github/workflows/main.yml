name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - Develop
      - deploy
      - feature/*
      - release/*

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create database tables
        run: python db.py    

      - name: Run backend tests
        run: |
          pytest test.py


  deploy-staging:
    needs: [backend-test, frontend-test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

    - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

    - name: Deploy backend to staging
      env:
        DO_API_KEY: ${{ secrets.DO_API_KEY }}
      run: |
        # Adapt this script to deploy your backend to the staging droplet on DigitalOcean
        # using the API
        # using the API key stored in the DO_API_KEY environment variable
        # and any necessary deployment scripts or commands.     