name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - Develop
      - deploy
      - feature/*
      - release/*

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create database tables
        run: python db.py    

      - name: Run backend tests
        run: |
          pytest test.py

  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.5.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-pip
        pip3 install -r requirements.txt

    - name: Deploy to DigitalOcean
      run: |
        ssh -o StrictHostKeyChecking=no -p 22 root@128.199.20.236 'cd /root/superadmin && git pull origin Develop && sudo systemctl restart app.service'
  # deploy-staging:
  #   needs: [backend-tests]
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/Develop'

  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v2

    
  #   - name: Deploy backend staging
  #     env:
  #       DO_API_KEY: ${{ secrets.DO_API_KEY }}
  #       DROPLET_USER: root
  #       DROPLET_IP: 128.199.20.236
  #       PROJECT_DIRECTORY: /root/superadmin
  #     run: |
  #       # Adapt this script to deploy your backend to the staging droplet on DigitalOcean
  #       # using the API
  #       # using the API key stored in the DO_API_KEY environment variable
  #       # and any necessary deployment scripts or commands. 
       
  #       scp -r -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ./* ${{ env.DROPLET_USER }}@${{ env.DROPLET_IP }}:${{ env.PROJECT_DIRECTORY }} 
  #       ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ env.DROPLET_USER }}@${{ env.DROPLET_IP }} "cd ${{ env.PROJECT_DIRECTORY }} && source env/bin/activate && pip install -r requirements.txt"
  #       ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ env.DROPLET_USER }}@${{ env.DROPLET_IP }} "sudo systemctl restart app.service"   